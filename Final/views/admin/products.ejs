<!DOCTYPE html>
<html>
  <%- include('../components/headTag.ejs') %>
  <body>
    <%- include('./components/header.ejs') %> <%-
    include('./components/navbar.ejs') %>
    <div class="mobile-menu-overlay"></div>
    <div
      class="modal fade"
      id="exampleModal"
      tabindex="-1"
      aria-labelledby="exampleModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Add Product</h5>
            <button
              type="button"
              class="btn-close border-0 bg-transparent"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addProductForm" enctype="multipart/form-data">
              <!-- Name Field -->
              <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Enter product name"
                  maxlength="255"
                />
              </div>

              <!-- Category Field -->
              <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <select class="form-control" id="category" name="category">
                  <option value="Bakeries & Pastries">
                    Bakeries & Pastries
                  </option>
                  <option value="Dairy">Dairy</option>
                  <option value="Fruits and Veggies">Fruits and Veggies</option>
                  <option value="Snacks">Snacks</option>
                  <option value="Behind the Counter">Behind the Counter</option>
                  <option value="Beverages">Beverages</option>
                  <option value="Beauty Essentials">Beauty Essentials</option>
                </select>
              </div>

              <!-- Price Field -->
              <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input
                  type="number"
                  class="form-control"
                  id="price"
                  name="price"
                  placeholder="Enter product price"
                  min="0"
                  step="0.01"
                />
              </div>

              <!-- Quantity Field -->
              <div class="mb-3">
                <label for="quantity" class="form-label">Quantity</label>
                <input
                  type="number"
                  class="form-control"
                  id="quantity"
                  name="quantity"
                  placeholder="Enter quantity"
                  min="0"
                />
              </div>

              <!-- Description Field -->
              <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea
                  class="form-control"
                  id="description"
                  name="description"
                  placeholder="Enter product description"
                  rows="3"
                ></textarea>
              </div>

              <!-- Image URL Field -->
              <div class="mb-3">
                <label for="imageUrl" class="form-label">Image URL</label>
                <input
                  type="file"
                  class="form-control"
                  id="imageUrl"
                  name="image"
                  placeholder="Enter image URL"
                  accept="image/*"
                  required
                />
              </div>

              <!-- Submit and Close Buttons -->
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                <button type="submit" class="btn btn-primary" id="add_btn">
                  Add Product
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <div class="main-container">
      <div class="mb-20 d-flex justify-content-between p-3">
        <h1>Products</h1>
        <button
          type="button"
          class="btn btn-success"
          data-bs-toggle="modal"
          data-bs-target="#exampleModal"
        >
          + Add Product
        </button>
      </div>
      <div class="card-box mb-30">
        <div class="p-4">
          <% if (products && products.length > 0) { %>
          <div class="row clearfix">
            <% products.forEach(product => { %>
            <div class="col-lg-3 col-md-6 col-sm-12 mb-30">
              <div class="card card-box">
                <img
                  class="card-img-top"
                  src="<%= product.imageUrl %>"
                  alt="<%= product.name %>"
                />
                <div class="card-body">
                  <h5 class="card-title weight-500"><%= product.name %></h5>

                  <div class="d-flex justify-content-between">
                    <a href="" class="btn btn-primary">Show more</a>
                    <button
                      type="button"
                      class="btn btn-danger delete-button"
                      data-id="<%=product._id %>"
                    >
                      <i class="icon-copy fa fa-trash-o" aria-hidden="true"></i>
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <% }); %>
          </div>
          <% } else { %>
          <p>No products available</p>
          <% } %>
        </div>
      </div>
    </div>

    <!-- js -->
    <script src="/vendors/scripts/core.js"></script>
    <script src="/vendors/scripts/script.min.js"></script>
    <script src="/vendors/scripts/process.js"></script>
    <script src="/vendors/scripts/layout-settings.js"></script>
    <script src="/plugins/datatables/js/jquery.dataTables.min.js"></script>
    <script src="/plugins/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="/plugins/datatables/js/dataTables.responsive.min.js"></script>
    <script src="/plugins/datatables/js/responsive.bootstrap4.min.js"></script>
    <script src="/plugins/datatables/js/dataTables.buttons.min.js"></script>
    <script src="/plugins/datatables/js/buttons.bootstrap4.min.js"></script>
    <script src="/plugins/datatables/js/buttons.print.min.js"></script>
    <script src="/plugins/datatables/js/buttons.html5.min.js"></script>
    <script src="/plugins/datatables/js/buttons.flash.min.js"></script>
    <script src="/plugins/datatables/js/pdfmake.min.js"></script>
    <script src="/plugins/datatables/js/vfs_fonts.js"></script>
    <script src="/vendors/scripts/datatable-setting.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/validator@13.7.0/validator.min.js"></script>
    <script type="module">
      import showMsg from "/js/toastify.js";

      document
        .getElementById("addProductForm")
        .addEventListener("submit", async (event) => {
          event.preventDefault();

          // Disable the submit button to prevent multiple submissions
          document.getElementById("add_btn").disabled = true;

          // Collecting form data
          const formData = new FormData(event.target);

          // Validation checks (for the form fields, excluding the file input)
          const name = document.getElementById("name").value.trim();
          const category = document.getElementById("category").value;
          const price = document.getElementById("price").value.trim();
          const quantity = document.getElementById("quantity").value.trim();
          const description = document
            .getElementById("description")
            .value.trim();

          if (!name) {
            document.getElementById("add_btn").disabled = false;
            return showMsg("Name is required.", "red");
          }

          if (!category) {
            document.getElementById("add_btn").disabled = false;
            return showMsg("Category is required.", "red");
          }

          if (!price || isNaN(price) || parseFloat(price) < 0) {
            document.getElementById("add_btn").disabled = false;
            return showMsg("Please enter a valid price.", "red");
          }

          if (!quantity || isNaN(quantity) || parseInt(quantity) < 0) {
            document.getElementById("add_btn").disabled = false;
            return showMsg("Please enter a valid quantity.", "red");
          }

          if (!description) {
            document.getElementById("add_btn").disabled = false;
            return showMsg("Description is required.", "red");
          }

          try {
            // Send the form data including the file to the server
            const response = await fetch("/products", {
              method: "POST",
              body: formData, // FormData automatically includes the file
            });

            const data = await response.json();

            if (response.ok) {
              showMsg("Product added successfully!", "green");
              setTimeout(() => {
                location.reload();
              }, 500);
            } else {
              showMsg(data.error || "An error occurred.", "red");
            }
          } catch (error) {
            showMsg("Error: " + error.message, "red");
          } finally {
            document.getElementById("add_btn").disabled = false;
          }
        });
    </script>

    <script type="module">
      import showMsg from "/js/toastify.js";
      document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".delete-button").forEach((button) => {
          button.addEventListener("click", (event) => {
            const productId = button.getAttribute("data-id");

            fetch(`/products/${productId}`, {
              method: "DELETE",
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.errMsg) showMsg(data.errMsg, "red");
                else {
                  showMsg("Product removed successfully", "green");
                  setTimeout(() => {
                    location.reload();
                  }, 1000);
                }
              })
              .catch((error) => {
                showMsg("Error: " + error, "red");
              });
          });
        });
      });
    </script>
  </body>
</html>
